/*************************************************************************************************/

/*

    ADOBE CONFIDENTIAL
    ___________________

    Copyright 2003 - 2003 Adobe Systems Incorporated
    All Rights Reserved.

    NOTICE: All information contained herein is, and remains the property of
    Adobe Systems Incorporated and its suppliers, if any. The intellectual and 
    technical concepts contained herein are proprietary to Adobe Systems Incorporated 
    and its suppliers and may be covered by U.S. and Foreign Patents, patents 
    in process, and are protected by trade secret or copyright law. Dissemination 
    of this information or reproduction of this material is strictly forbidden 
    unless prior written permission is obtained from Adobe Systems Incorporated.
 
*/

/*************************************************************************************************/

/*! \defgroup stldoc_EqualityComparable EqualityComparable
\ingroup asl_concepts

\description
A type is EqualityComparable if objects of that type can be compared for equality using <code>operator==</code>, and if <code>operator==</code> is an equivalence relation.

\refinement_of

\associated_types

\notation
<table>
    <tr>
        <td valign="top"><code>X</code></td>
        <td valign="top">A type that is a model of EqualityComparable</td>
    </tr>
    <tr>
        <td valign="top"><code>x</code>, <code>y</code>, <code>z</code></td>
        <td valign="top">Object of type <code>X</code></td>
    </tr>
</table>

\definitions

\valid_expressions
<table border="1" cellpadding="3" cellspacing="3">
    <tr>
        <th>Name</th><th>Expression</th><th>Type requirements</th><th>Return type</th>
    </tr>
    <tr>
        <td valign="top">Equality</td>
        <td valign="top"><code>x == y</code></td>
        <td valign="top">&nbsp;</td>
        <td valign="top">Convertible to <code>bool</code></td>
    </tr>
    <tr>
        <td valign="top">Inequality</td>
        <td valign="top"><code>x != y</code></td>
        <td valign="top">&nbsp;</td>
        <td valign="top">Convertible to <code>bool</code></td>
    </tr>
</table>

\expression_semantics
<table border="1" cellpadding="3" cellspacing="3">
    <tr>
        <th>Name</th><th>Expression</th><th>Precondition</th><th>Semantics</th><th>Postcondition</th>
    </tr>
    <tr>
        <td valign="top">Equality</td>
        <td valign="top"><code>x == y</code></td>
        <td valign="top"><code>x</code> and <code>y</code> are in the domain of <code>==</code></td>
        <td valign="top">&nbsp;</td>
        <td valign="top">&nbsp;</td>
    </tr>
    <tr>
        <td valign="top">Inequality</td>
        <td valign="top"><code>x != y</code></td>
        <td valign="top"><code>x</code> and <code>y</code> are in the domain of <code>==</code></td>
        <td valign="top">Equivalent to <code>!(x == y)</code></td>
        <td valign="top">&nbsp;</td>
    </tr>
</table>

\complexity

\invariants
<table border="1" cellpadding="3" cellspacing="3">
    <tr>
        <td valign="top">Identity</td>
        <td valign="top"><code>&amp;x == &amp;y</code> implies <code>x</code> == <code>y</code></td>
    </tr>
    <tr>
        <td valign="top">Reflexivity</td>
        <td valign="top"><code>x == x</code></td>
    </tr>
    <tr>
        <td valign="top">Symmetry</td>
        <td valign="top"><code>x == y</code> implies <code>y == x</code></td>
    </tr>
    <tr>
        <td valign="top">Transitivity</td>
        <td valign="top"><code>x == y</code> and <code>y == z</code> implies <code>x == z</code></td>
    </tr>
</table>

\models
    - int
    - <code>std::vector<T></code>

\notes

\see_also
    - \ref stldoc_LessThanComparable
*/
