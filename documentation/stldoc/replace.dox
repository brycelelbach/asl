/** \page stldoc_replace replace

<table cellpadding="0" cellspacing="0" width="100%" border="0">
<tr>
<td align="left">\image html algorithms.gif</td>
<td width="100%"></td>
<td align="right">\image html function.gif</td>
</tr>
<tr>
<td align="left" valign="top"><b>Category</b>: algorithms</td>
<td width="100%"></td>
<td align="right" valign="top"><b>Component type</b>: function</td>
</tr>
</table>

\section Prototype Prototype
\code
template <class ForwardIterator, class T>
void replace(ForwardIterator first, ForwardIterator last, const T& old_value,
             const T& new_value)
\endcode
\section Description Description
<code>Replace</code> replaces every element in the range <code>[first, last)</code> 
equal to <code>old_value</code> with <code>new_value</code>.  That is: for every iterator <code>i</code>,
if <code>*i == old_value</code> then it performs the assignment <code>*i = new_value</code>.
\section Definition Definition
Defined in the standard header <A href="algorithm">algorithm</A>, and in the nonstandard
backward-compatibility header <A href="algo.h">algo.h</A>.
\section Requirements_on_types Requirements on types
<ul>
<li>
<code>ForwardIterator</code> is a model of \ref stldoc_ForwardIterator.
<li>
<code>ForwardIterator</code> is mutable.
<li>
<code>T</code> is convertible to <code>ForwardIterator</code>'s value type.
<li>
<code>T</code> is \ref stldoc_Assignable.
<li>
<code>T</code> is \ref stldoc_EqualityComparable, and may be compared for equality with
   objects of <code>ForwardIterator</code>'s value type.
</ul>
\section Preconditions Preconditions
<ul>
<li>
<code>[first, last)</code> is a valid range.
</ul>
\section Complexity Complexity
Linear.  <code>Replace</code> performs exactly <code>last - first</code> comparisons for 
equality, and at most <code>last - first</code> assignments.
\section Example Example
\code
Vector<int> V;
V.push_back(1);
V.push_back(2);
V.push_back(3);
V.push_back(1);

replace(V.begin(), V.end(), 1, 99);
assert(V[0] == 99 && V[3] == 99);
\endcode
\section Notes Notes
\section See_also See also
<code>\ref stldoc_replace_if</code>, <code>\ref stldoc_replace_copy</code>, <code>\ref stldoc_replace_copy_if</code>


*/
