/** \page stldoc_AdaptableBinaryPredicate AdaptableBinaryPredicate

<table cellpadding="0" cellspacing="0" width="100%" border="0">
<tr>
<td align="left">\image html functors.gif</td>
<td width="100%"></td>
<td align="right">\image html concept.gif</td>
</tr>
<tr>
<td align="left" valign="top"><b>Category</b>: functors</td>
<td width="100%"></td>
<td align="right" valign="top"><b>Component type</b>: concept</td>
</tr>
</table>

\section Description Description
An Adaptable Binary Predicate is a \ref stldoc_BinaryPredicate that is also an
\ref stldoc_AdaptableBinaryFunction.  That is, it is a \ref stldoc_BinaryFunction
whose return type is <code>bool</code>, and that includes nested <code>typedef</code>s that
define its argument types and return type.  
\section Refinement_of Refinement of
\ref stldoc_Predicate, \ref stldoc_AdaptableBinaryFunction
\section Associated_types Associated types
None, except for those associated with \ref stldoc_Predicate and
\ref stldoc_AdaptableBinaryFunction.
\section Notation Notation
\section Definitions Definitions
\section Valid_expressions Valid expressions
None, except for those defined by the \ref stldoc_Predicate and
\ref stldoc_AdaptableBinaryFunction requirements.
\section Expression_semantics Expression semantics
\section Complexity_guarantees Complexity guarantees
\section Invariants Invariants
\section Models Models
<ul>
<li>
<code>\ref stldoc_less</code>
<li>
<code>\ref stldoc_equal_to</code>
<li>
<code>\ref stldoc_logical_and</code>
<li>
<code>\ref stldoc_logical_or</code>
<li>
<code>\ref stldoc_binary_negate</code>
</ul>
\section Notes Notes
\section See_also See also
\ref stldoc_BinaryPredicate, \ref stldoc_Predicate, \ref stldoc_AdaptablePredicate


*/
