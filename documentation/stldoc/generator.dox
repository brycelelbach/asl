/** \page stldoc_Generator Generator

<table cellpadding="0" cellspacing="0" width="100%" border="0">
<tr>
<td align="left">\image html functors.gif</td>
<td width="100%"></td>
<td align="right">\image html concept.gif</td>
</tr>
<tr>
<td align="left" valign="top"><b>Category</b> : functors</td>
<td width="100%"></td>
<td align="right" valign="top"><b>Component type</b>: concept</td>
</tr>
</table>

\section Description Description
A Generator is a kind of \ref stldoc_functors : an object that is called
as if it were an ordinary C++ function.  A Generator is called with no
arguments.
\section Refinement_of Refinement of
\ref stldoc_Assignable
\section Associated_types Associated types
<table border="1" cellpadding="3" cellspacing="3">
<tr>
<td valign="top">
Result type
</td>
<td valign="top">
The type returned when the Generator is called
</td>
</tr>
</table>
\section Notation Notation
<table>
<tr>
<td valign="top">
<code>F</code>
</td>
<td valign="top">
A type that is a model of Generator
</td>
</tr>
<tr>
<td valign="top">
<code>Result</code>
</td>
<td valign="top">
The result type of <code>F</code>
</td>
</tr>
<tr>
<td valign="top">
<code>f</code>
</td>
<td valign="top">
Object of type <code>F</code>
</td>
</tr>
</table>
\section Definitions Definitions
The <i>range</i> of a Generator is the set of all possible value that it
   may return.
\section Valid_expressions Valid expressions
<table border="1" cellpadding="3" cellspacing="3">
<tr>
<TH>
Name
</TH>
<TH>
Expression
</TH>
<TH>
Type requirements
</TH>
<TH>
Return type
</TH>
</tr>
<tr>
<td valign="top">
Function call
</td>
<td valign="top">
<code>f()</code>
</td>
<td valign="top">
&nbsp;
</td>
<td valign="top">
<code>Result</code>
</td>
</tr>
</table>
\section Expression_semantics Expression semantics
<table border="1" cellpadding="3" cellspacing="3">
<tr>
<TH>
Name
</TH>
<TH>
Expression
</TH>
<TH>
Precondition
</TH>
<TH>
Semantics
</TH>
<TH>
Postcondition
</TH>
</tr>
<tr>
<td valign="top">
Function call
</td>
<td valign="top">
<code>f()</code>
</td>
<td valign="top">
&nbsp;
</td>
<td valign="top">
Returns some value of type <code>Result</code> <A href="#1">[1]</A>
</td>
<td valign="top">
The return value is in <code>f</code>'s range.
</td>
</tr>
</table>
\section Complexity_guarantees Complexity guarantees
\section Invariants Invariants
\section Models Models
<ul>
<li>
<code>Result (*)()</code>
</ul>
\section Notes Notes
<p><A name="1">[1]</A>
Two different invocations of <code>f</code> may return different results :
a Generator may refer to local state, perform I/O, and
so on.  The expression <code>f()</code> is permitted to change <code>f</code>'s state; <code>f</code>
might, for example, represent a pseudo-random number generator.
\section See_also See also
\ref stldoc_functors, \ref stldoc_UnaryFunction, \ref stldoc_BinaryFunction,
\ref stldoc_AdaptableGenerator


*/
